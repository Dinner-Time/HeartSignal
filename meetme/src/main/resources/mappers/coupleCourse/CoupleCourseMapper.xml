<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.hs.meetme.coupleCourse.mapper.CoupleCourseMapper">

	<select id="getList" resultType="CoupleCourseVO">
		select *
		from(SELECT DISTINCT
		a.user_id,
		(
		SELECT e.nickname
		FROM user_info e
		WHERE e.user_id =
		a.user_id
		) nickname,
		(
		SELECT f.img_url
		FROM img f
		WHERE f.img_id IN (
		SELECT img_id
		FROM user_info
		WHERE user_id=a.user_id
		)
		) img_url,
		a.course_id,
		a.course_name,
		a.course_state,
		a.course_open,
		a.course_created,
		a.region,
		(
		SELECT sum_cost
		FROM (
		SELECT
		course_id,
		SUM(avg_cost) sum_cost
		FROM course_order
		GROUP BY course_id
		) c
		WHERE
		c.course_id = b.course_id
		) sum_cost,
		a.couple_id
		FROM course a,
		course_order b
		WHERE a.course_id IN (
		SELECT course_id
		FROM course_like
		WHERE user_id = #{userId} AND a.course_id=b.course_id
		)

		UNION

		SELECT
		DISTINCT
		a.user_id,
		(
		SELECT e.nickname
		FROM user_info e
		WHERE
		e.user_id=a.user_id
		) nickname,
		(
		SELECT f.img_url
		FROM img f
		WHERE
		f.img_id
		IN (SELECT img_id FROM user_info WHERE
		user_id=a.user_id))img_url,
		a.course_id,
		a.course_name,
		a.course_state,
		a.course_open,
		a.course_created,
		a.region,
		(
		SELECT sum_cost
		FROM (
		SELECT
		course_id,
		SUM(avg_cost) sum_cost
		FROM course_order
		GROUP BY course_id
		) c
		WHERE c.course_id = b.course_id
		) sum_cost,
		a.couple_id couple_id
		FROM
		course a, course_order b
		WHERE a.user_id=#{userId} AND
		a.course_id=b.course_id AND
		a.course_open='y')
		where
		couple_id=#{coupleId}
	</select>

	<select id="getCourse" resultType="CoupleCourseVO">
		SELECT
		a.user_id,
		a.course_id,
		a.course_name,
		a.course_state,
		a.course_open,
		a.region,
		b.course_order,
		b.place_id,
		c.place_name,
		c.address,
		c.place_phone,
		c.avg_cost,
		c.description,
		c.region,
		c.thumbnail_href
		FROM course a, course_order b, place c
		WHERE a.course_id IN (SELECT
		course_id FROM course_like WHERE couple_id = #{coupleId}) AND
		a.course_id=b.course_id AND b.place_id =c.place_id
		UNION
		SELECT
		a.user_id,
		a.course_id,
		a.course_name,
		a.course_state,
		a.course_open,
		a.region,
		b.course_order,
		b.place_id,
		c.place_name,
		c.address,
		c.place_phone,
		c.avg_cost,
		c.description,
		c.region,
		c.thumbnail_href
		FROM course a, course_order b, place c
		WHERE a.couple_id=#{coupleId}
		AND a.course_id=b.course_id AND b.place_id =c.place_id AND
		a.course_open='y'
		ORDER BY course_id
	</select>

	<!-- 저장된 코스 삭제 -->
	<delete id="deleteCourse" parameterType="CoupleCourseVO">
		DELETE
			FROM
			course
		WHERE
		course_id = #{courseId} AND couple_id= #{coupleId}
	</delete>
	
	<delete  id="deleteCourseOrder" parameterType="CoupleCourseVO">
		DELETE 
			FROM 
			COURSE_ORDER
		WHERE
		COURSE_ID= #{courseId}
	</delete>


</mapper>